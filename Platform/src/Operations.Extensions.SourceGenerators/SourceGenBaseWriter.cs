// Copyright (c) ABCDEG. All rights reserved.

using Operations.Extensions.SourceGenerators.Extensions;
using System.Collections.Immutable;
using System.Text;

namespace Operations.Extensions.SourceGenerators;

internal abstract class SourceGenBaseWriter
{
    protected static void AppendContainingTypeStarts(StringBuilder sb, ImmutableArray<INamedTypeSymbol> containingTypes)
    {
        foreach (var type in containingTypes)
        {
            sb.AppendLine(type.GetTypeDeclaration());
            sb.AppendLine("{");
        }
    }

    protected static void AppendContainingTypeEnds(StringBuilder sb, ImmutableArray<INamedTypeSymbol> containingTypes)
    {
        for (var i = 0; i < containingTypes.Length; i++)
        {
            sb.AppendLine("}");
        }
    }

    protected static void AppendNamespace(StringBuilder sb, string? ns)
    {
        if (ns is not null)
        {
            sb.AppendLine($"namespace {ns};");
            sb.AppendLine();
        }
    }

    protected static void AppendFileHeader(StringBuilder sb)
    {
        sb.AppendLine("// <auto-generated/>");
        sb.AppendLine("#nullable enable");
        sb.AppendLine();
    }
}
